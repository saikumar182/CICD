# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: springboot ci/cd with maven

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven

        uses: webfactory/ssh-agent@v0.5.3

        with:
          ssh-private-key: ${{ secrets.CICD_PRIVATE_SSH_KEY }}
#        run: mvn clean install


#      - name: Build & push Docker image
#        uses: mr-smithers-excellent/docker-build-push@v4
#        with:
#          image: saikumar781/springbootcicd
#          tags: latest
#          registry: docker.io
#          dockerfile: Dockerfile
#          username: ${{ secrets.DOCKER_USERNAME }}
#          password: ${{ secrets.DOCKER_PASSWORD }}


        run:
         ssh -T -o StrictHostKeyChecking=no @34.133.22.178 -p 22 \
          "cd ~/springbootcicd/ && \
          docker stop springbootcicd && \
          docker rm springbootcicd && \
          docker rmi springbootcicd:latest && \
          docker stop \$(docker ps -a -q) && \
          git checkout master && \
          git pull && \
          docker build -t springbootcicd:latest -f Dockerfile . && \
          docker run -p 8080:8080 -d --name springbootcicd springbootcicd:latest && \
          docker start \$(docker ps -a -q)"

